services:
  nginx:
    container_name: nginx
    image: nginx:latest
    restart: always
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - spring-app
    networks:
      - app-network

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    networks:
      - app-network

  # mvn spring-boot:build-image -Dspring-boot.build-image.imageName=my-spring-app  -DskipTests
  # Add this command to docker compose modify command before launch section, select mvn and add the command spring-boot:build-image -Dspring-boot.build-image.imageName=my-spring-app  -DskipTests

  spring-app:
    image: my-spring-app:latest
    deploy:
      replicas: 3
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/mydatabase
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      AWS_REGION: us-east-1
      S3_ENDPOINT: http://localstack:4566
    depends_on:
      - postgres
    restart: always
    networks:
      - app-network

  localstack:
    image: localstack/localstack:latest
    container_name: localstack
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3
      - DEFAULT_REGION=us-east-1
      - EDGE_PORT=4566
      - DATA_DIR=/tmp/localstack/data
    volumes:
      - ./localstack/init-s3.sh:/etc/localstack/init/ready.d/init-s3.sh
    networks:
      - app-network

networks:
  app-network:
    driver: bridge